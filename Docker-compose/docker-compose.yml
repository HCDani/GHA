services:
  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_LOG_LEVEL=info
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      opensearch:
        condition: service_healthy

  opensearch:
    image: opensearchproject/opensearch:2.15.0
    container_name: opensearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - plugins.security.disabled=false
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${PASSWORD_OPENSEARCH}
      - OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      - os-data:/usr/share/opensearch/data
    healthcheck:
      test: ["CMD-SHELL","curl -k -u admin:${PASSWORD_OPENSEARCH} https://localhost:9200 >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 30

  dashboards:
    image: opensearchproject/opensearch-dashboards:2.15.0
    container_name: opensearch-dashboards
    restart: unless-stopped
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch:9200"]'
      OPENSEARCH_USERNAME: admin
      OPENSEARCH_PASSWORD: ${PASSWORD_OPENSEARCH}
      OPENSEARCH_SSL_VERIFICATION: "false"
    ports:
      - "5601:5601"
    depends_on:
      opensearch:
        condition: service_healthy


  mqtt:
    image: eclipse-mosquitto:2-openssl
    container_name: mqtt
    restart: unless-stopped
    ports:
      - "1883:1883"
    environment:
      DEBUG: "true"
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log

  logstash:
    build: ./logstash
    container_name: logstash
    restart: unless-stopped
    environment:
      LS_JAVA_OPTS: "-Xms512m -Xmx512m"
      PASSWORD_OPENSEARCH: ${PASSWORD_OPENSEARCH}
    ports:
      - "5044:5044"
    depends_on:
      opensearch:
        condition: service_healthy
    volumes:
      - ./logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro


  filebeat:
    image: docker.elastic.co/beats/filebeat:8.15.0
    platform: linux/amd64
    container_name: filebeat
    restart: unless-stopped
    depends_on:
      logstash:
        condition: service_started
    volumes:
      - /home/hcdani/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /home/hcdani/filebeat/logs:/usr/share/filebeat/logs
      - /home/hcdani/filebeat/data:/usr/share/filebeat/data

volumes:
  os-data:
  grafana-data:
